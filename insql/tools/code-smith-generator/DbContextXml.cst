<%@ CodeTemplate Language="C#" ResponseEncoding="UTF-8" TargetLanguage="C#" Debug="TRUE" Inherits="OutputFileCodeTemplate"%>

<%@ Assembly Name="SchemaExplorer" %>
<%@ Import Namespace="SchemaExplorer" %>
<%@ Assembly Name="CodeSmith.BaseTemplates" %>
<%@ Import Namespace="CodeSmith.BaseTemplates" %>
<%@ Assembly Name="CodeSmith.CustomProperties" %>
<%@ Import Namespace="CodeSmith.CustomProperties" %>

<%@ Assembly src="Helper.cs" %>
<%@ Import Namespace="Common" %>

<%@ Property Name="Tables" Type="SchemaExplorer.TableSchemaCollection" Category="Context" Description="Tables" %>

<%@ Property Name="QuoteOpen" Type="String" Category="DbContextXml" Optional="True" Description="Quote" %>
<%@ Property Name="QuoteClose" Type="String" Category="DbContextXml" Optional="True" Description="Quote" %>
<%@ Property Name="SqlParamPrefix" Type="String" Default="@" Category="DbContextXml" Optional="True" Description="Sql Param Name Prefix" %>
<%@ Property Name="SqlIdSuffix" Type="String" Category="DbContextXml" Optional="True" Description="DbContext Xml Sql Section Id Suffix" %>
<%@ Property Name="SqlIdModelTrimStart" Type="String" Category="DbContextXml" Optional="True" Description="SqlId Model Name TrimStart" %>
<%@ Property Name="SqlIdModelTrimEnd" Type="String" Default="Info" Category="DbContextXml" Optional="True" Description="SqlId Model Name TrimEnd" %>

<%@ Property Name="DbContextAssembly" Type="String" Category="DbContext" Description="DbContext Assembly" %>
<%@ Property Name="DbContextNamespace" Type="String" Category="DbContext" Description="DbContext Namespace" %>
<%@ Property Name="DbContextName" Type="String" Category="DbContext" Description="DbContext Name" %>

<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE insql PUBLIC "-//insql//DTD Insql 2.0//EN" "https://raw.githubusercontent.com/rainrcn/insql/master/tools/insql-2.dtd">
<insql type="<%=DbContextNamespace%>.<%=DbContextName %>,<%= DbContextAssembly%>">
  <% foreach (TableSchema tableSchema in this.Tables) { %>
  
  <!-- 
    <%=tableSchema.Name%>
  -->
  
  <insert id="Insert<%=Helper.GetModelClassTrimName(tableSchema,this.SqlIdModelTrimStart,this.SqlIdModelTrimEnd)%><%=SqlIdSuffix%>">
    INSERT INTO <%= $"{QuoteOpen}{tableSchema.Name}{QuoteClose}"%> 
    (<%= string.Join(",",tableSchema.Columns.Select(columnSchema=> $"{QuoteOpen}{columnSchema.Name}{QuoteClose}")) %>) 
    VALUES (<%= string.Join(",",tableSchema.Columns.Select(columnSchema=> $"{SqlParamPrefix}{Helper.GetModelPropertyName(columnSchema)}")) %>)
  </insert>
  
  <% if(tableSchema.Columns.Any(columnSchema=> columnSchema.IsPrimaryKeyMember)) {%>
  <% if(tableSchema.Columns.Any(columnSchema=> !columnSchema.IsPrimaryKeyMember)) {%>
  <update id="Update<%=Helper.GetModelClassTrimName(tableSchema,this.SqlIdModelTrimStart,this.SqlIdModelTrimEnd)%><%=SqlIdSuffix%>">
    UPDATE <%= $"{QuoteOpen}{tableSchema.Name}{QuoteClose}"%> SET
    <%= string.Join($",{System.Environment.NewLine}    ",tableSchema.Columns.Where(columnSchema=> !columnSchema.IsPrimaryKeyMember).Select(columnSchema=> $"{QuoteOpen}{columnSchema.Name}{QuoteClose} = {SqlParamPrefix}{Helper.GetModelPropertyName(columnSchema)}")) %>
    WHERE <%= string.Join(" AND ",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=>$"{QuoteOpen}{columnSchema.Name}{QuoteClose} = {SqlParamPrefix}{Helper.GetModelPropertyName(columnSchema)}")) %>
  </update>
  <%} %>
  
  <delete id="Delete<%=Helper.GetModelClassTrimName(tableSchema,this.SqlIdModelTrimStart,this.SqlIdModelTrimEnd)%><%=SqlIdSuffix%>">
    DELETE FROM <%= $"{QuoteOpen}{tableSchema.Name}{QuoteClose}"%> WHERE <%= string.Join(" AND ",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=>$"{QuoteOpen}{columnSchema.Name}{QuoteClose} = {SqlParamPrefix}{Helper.GetModelPropertyName(columnSchema)}")) %>
  </delete>
  
  <select id="Select<%=Helper.GetModelClassTrimName(tableSchema,this.SqlIdModelTrimStart,this.SqlIdModelTrimEnd)%><%=SqlIdSuffix%>">
    SELECT * FROM <%= $"{QuoteOpen}{tableSchema.Name}{QuoteClose}"%> WHERE <%= string.Join(" AND ",tableSchema.Columns.Where(columnSchema=> columnSchema.IsPrimaryKeyMember)
    .Select(columnSchema=>$"{QuoteOpen}{columnSchema.Name}{QuoteClose} = {SqlParamPrefix}{Helper.GetModelPropertyName(columnSchema)}")) %>
  </select>
    <%} %>
<%} %>
</insql>